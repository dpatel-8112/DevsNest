{"version":3,"sources":["component/Style.module.css","logo.svg","component/ActiveContext.jsx","component/Memes.jsx","component/Home.jsx","component/Generator.jsx","App.js","reportWebVitals.js","index.js"],"names":["module","exports","ActiveContext","React","createContext","ActiveProvider","Provider","Consumer","Memes","item","useContext","setActiveHandler","setActiveHomeHandler","active","className","style","MemesConstainer","onClick","src","url","width","height","alt","cursor","padding","Home","useState","memes","setMemes","useEffect","axios","get","then","response","data","catch","error","console","log","HomeContainer","filter","map","Generator","text","setText","activeURL","setActiveURL","generate","setGenerate","id","value","index","res","err","GContainer","InputContainer","Array","box_count","_","Input","type","placeholder","onChange","e","newText","target","Button","App","setActive","isHomeActive","setIsHomeActive","newState","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.37fdeeea.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"HomeContainer\":\"Style_HomeContainer__3fRKZ\",\"MemesConstainer\":\"Style_MemesConstainer__2c3u_\",\"GContainer\":\"Style_GContainer__uVSXt\",\"InputContainer\":\"Style_InputContainer__34O-t\",\"Input\":\"Style_Input__2UD4C\",\"Button\":\"Style_Button__3QuDg\"};","export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from \"react\";\r\n\r\nconst ActiveContext = React.createContext();\r\n\r\nconst ActiveProvider = ActiveContext.Provider;\r\nconst ActiveConsumer = ActiveContext.Consumer;\r\n\r\nexport { ActiveContext };\r\nexport { ActiveProvider, ActiveConsumer };\r\n","import React, { useContext } from \"react\";\r\nimport { ActiveContext } from \"./ActiveContext\";\r\nimport style from \"./Style.module.css\";\r\n\r\nfunction Memes({ item }) {\r\n  const { setActiveHandler, active, setActiveHomeHandler } =\r\n    useContext(ActiveContext);\r\n  const clickImageHandler = () => {\r\n    setActiveHandler(item);\r\n    setActiveHomeHandler(false);\r\n  };\r\n  return (\r\n    <div className={style.MemesConstainer} onClick={clickImageHandler}>\r\n      <img\r\n        src={item.url}\r\n        width=\"500px\"\r\n        height=\"500\"\r\n        alt=\"\"\r\n        style={{ cursor: \"pointer\", padding: \"10px\" }}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Memes;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport Memes from \"./Memes\";\r\nimport style from \"./Style.module.css\";\r\n\r\nfunction Home() {\r\n  const [memes, setMemes] = useState([]);\r\n  useEffect(() => {\r\n    axios\r\n      .get(\"https://api.imgflip.com/get_memes\")\r\n      .then((response) => {\r\n        setMemes(response.data.data.memes);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n    return () => {};\r\n  }, []);\r\n\r\n  return (\r\n    <div className={style.HomeContainer}>\r\n      {memes\r\n        ? memes\r\n            .filter((item) => {\r\n              if (item.height <= 600) {\r\n                return item;\r\n              }\r\n              return item;\r\n            })\r\n            .map((item) => {\r\n              return <Memes item={item} />;\r\n            })\r\n        : \"\"}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n","import React, { useState, useEffect, useContext } from \"react\";\r\nimport { ActiveContext } from \"./ActiveContext\";\r\nimport axios from \"axios\";\r\nimport style from \"./Style.module.css\";\r\n\r\nfunction Generator() {\r\n  const [text, setText] = useState([]);\r\n  const [activeURL, setActiveURL] = useState(\"\");\r\n\r\n  const [generate, setGenerate] = useState(false);\r\n\r\n  const { setActiveHandler, active, setActiveHomeHandler } =\r\n    useContext(ActiveContext);\r\n\r\n  useEffect(() => {\r\n    setActiveURL(active.url);\r\n    return () => {\r\n      setActiveURL(active.url);\r\n    };\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    let url = `https://api.imgflip.com/caption_image?template_id=${active.id}&username=DevarshiPatel&password=Abcd123@`;\r\n\r\n    text.map((value, index) => {\r\n      url += `&boxes[${index}][text] = ${value}`;\r\n    });\r\n\r\n    axios\r\n      .get(url)\r\n      .then((res) => {\r\n        setActiveURL(res.data.data.url);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n    return () => {};\r\n  }, [generate]);\r\n\r\n  return (\r\n    <div className={style.GContainer}>\r\n      <div>\r\n        <img src={activeURL ? activeURL : \"\"} width=\"400px\" alt=\"\" />\r\n      </div>\r\n      <div>\r\n        <div className={style.InputContainer}>\r\n          {[...Array(active.box_count)].map((_, index) => {\r\n            return (\r\n              <input\r\n                className={style.Input}\r\n                type=\"text\"\r\n                placeholder={`Text ${index}`}\r\n                onChange={(e) => {\r\n                  const newText = [...text];\r\n                  newText[index] = e.target.value;\r\n                  setText(newText);\r\n                }}\r\n              />\r\n            );\r\n          })}\r\n        </div>\r\n\r\n        <div>\r\n          <button\r\n            className={style.Button}\r\n            onClick={() => setActiveHomeHandler(true)}\r\n          >\r\n            Choose Template\r\n          </button>\r\n          <button\r\n            className={style.Button}\r\n            onClick={() => setGenerate(!generate)}\r\n          >\r\n            Generate\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Generator;\r\n","import logo from \"./logo.svg\";\nimport \"./App.css\";\nimport Home from \"./component/Home\";\nimport { useState } from \"react\";\nimport { ActiveProvider } from \"./component/ActiveContext\";\nimport Generator from \"./component/Generator\";\n\nfunction App() {\n  const [active, setActive] = useState(\"\");\n  const [isHomeActive, setIsHomeActive] = useState(true);\n\n  const setActiveHandler = (newState) => {\n    setActive(newState);\n  };\n\n  const setActiveHomeHandler = (newState) => {\n    setIsHomeActive(newState);\n  };\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <ActiveProvider\n          value={{\n            setActiveHandler,\n            active,\n            setActive,\n            setActiveHomeHandler,\n          }}\n        >\n          {isHomeActive ? <Home /> : <Generator />}\n        </ActiveProvider>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}