{"version":3,"sources":["logo.svg","redux/add/AddType.jsx","redux/add/AddAction.jsx","component/InputTodo.jsx","component/Home.jsx","redux/rootReducer.js","redux/store.js","App.js","reportWebVitals.js","index.js"],"names":["ADD_TODO","addTodo","input","type","payload","InputTodo","useState","item","setItem","dispatch","useSelector","state","useDispatch","value","onChange","e","target","style","cursor","onClick","Home","initialState","id","todo","rootReducer","action","store","createStore","applyMiddleware","logger","App","className","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qMAAe,I,oBCAFA,EAAW,WCSTC,EAPC,SAACC,GACf,MAAO,CACLC,KAAMH,EACNI,QAASF,I,OC2BEG,MA5Bf,WACE,MAAwBC,mBAAS,IAAjC,mBAAOC,EAAP,KAAaC,EAAb,KAEMC,GADOC,aAAY,SAACC,GAAD,OAAWA,KACnBC,eASjB,OACE,gCACE,8BACE,uBACET,KAAK,OACLU,MAAON,EACPO,SAAU,SAACC,GAAD,OAAOP,EAAQO,EAAEC,OAAOH,YAGtC,yBAAQI,MAAO,CAAEC,OAAQ,WAAaC,QAhBnB,SAACJ,GAClBR,GACFE,EAASR,EAAQM,IAEnBC,EAAQ,KAYN,gBACM,WCdGY,MATf,WACE,OACE,gCACE,sCACA,cAAC,EAAD,Q,sBCLAC,EAAe,CACnBC,GAAI,EACJC,KAAM,IAiBOC,EAdK,WAAmC,IAAlCb,EAAiC,uDAAzBU,EAAcI,EAAW,uCACpD,OAAQA,EAAOtB,MACb,KAAKH,EACH,OAAO,2BACFW,GADL,IAEEY,KAAK,GAAD,mBAAMZ,EAAMY,MAAZ,CAAkB,CAAED,GAAIX,EAAMW,GAAIf,KAAMkB,EAAOrB,WACnDkB,GAAIX,EAAMW,GAAK,IAGnB,QACE,OAAOX,I,QCXEe,EAFDC,YAAYH,EAAaI,YAAgBC,WCcxCC,MAZf,WACE,OACE,cAAC,IAAD,CAAUJ,MAAOA,EAAjB,SACE,qBAAKK,UAAU,MAAf,SACE,wBAAQA,UAAU,aAAlB,SACE,cAAC,EAAD,WCCKC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.45f423d2.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","export const ADD_TODO = \"ADD_TODO\";\r\n","import { ADD_TODO } from \"./AddType\";\r\n\r\nconst addTodo = (input) => {\r\n  return {\r\n    type: ADD_TODO,\r\n    payload: input,\r\n  };\r\n};\r\n\r\nexport default addTodo;\r\n","import React, { useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport addTodo from \"../redux/add/AddAction\";\r\n\r\nfunction InputTodo() {\r\n  const [item, setItem] = useState(\"\");\r\n  const todo = useSelector((state) => state);\r\n  const dispatch = useDispatch();\r\n\r\n  const addTodoHandler = (e) => {\r\n    if (item) {\r\n      dispatch(addTodo(item));\r\n    }\r\n    setItem(\"\");\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div>\r\n        <input\r\n          type=\"text\"\r\n          value={item}\r\n          onChange={(e) => setItem(e.target.value)}\r\n        />\r\n      </div>\r\n      <button style={{ cursor: \"pointer\" }} onClick={addTodoHandler}>\r\n        Add{\" \"}\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default InputTodo;\r\n","import React from \"react\";\r\nimport InputTodo from \"./InputTodo\";\r\n\r\nfunction Home() {\r\n  return (\r\n    <div>\r\n      <h2>Home</h2>\r\n      <InputTodo />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n","import { ADD_TODO } from \"./add/AddType\";\r\n\r\nconst initialState = {\r\n  id: 0,\r\n  todo: [],\r\n};\r\n\r\nconst rootReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case ADD_TODO:\r\n      return {\r\n        ...state,\r\n        todo: [...state.todo, { id: state.id, item: action.payload }],\r\n        id: state.id + 1,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default rootReducer;\r\n","import { applyMiddleware, createStore } from \"redux\";\r\nimport rootReducer from \"./rootReducer\";\r\nimport { logger } from \"redux-logger\";\r\n\r\nconst store = createStore(rootReducer, applyMiddleware(logger));\r\n\r\nexport default store;\r\n","import logo from \"./logo.svg\";\nimport \"./App.css\";\nimport Home from \"./component/Home\";\nimport { Provider } from \"react-redux\";\nimport store from \"./redux/store\";\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <Home />\n        </header>\n      </div>\n    </Provider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}