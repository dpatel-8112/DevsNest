{"version":3,"sources":["component/Style.module.css","logo.svg","component/Memes.jsx","component/Home.jsx","App.js","reportWebVitals.js","index.js"],"names":["module","exports","Memes","item","className","style","MemesConstainer","name","src","url","width","height","alt","cursor","padding","Home","useState","memes","setMemes","randomId","setRandomId","useEffect","rand","Math","random","handleClick","axios","get","then","response","data","console","log","catch","error","HomeContainer","filter","slice","map","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mIACAA,EAAOC,QAAU,CAAC,cAAgB,6BAA6B,gBAAkB,iC,qFCDlE,I,oDCmBAC,MAff,YAA0B,IAATC,EAAQ,EAARA,KACf,OACE,sBAAKC,UAAWC,IAAMC,gBAAtB,UACE,+BAAOH,EAAKI,OACZ,qBACEC,IAAKL,EAAKM,IACVC,MAAM,QACNC,OAAO,MACPC,IAAI,GACJP,MAAO,CAAEQ,OAAQ,UAAWC,QAAS,cCqC9BC,MA7Cf,WACE,MAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAAgCF,mBAAS,GAAzC,mBAAOG,EAAP,KAAiBC,EAAjB,KAwBA,OAfAC,qBAAU,WAYR,OAnBkB,WAClB,IAEMC,EAFM,EAEO,GAAAC,KAAKC,SACxBJ,EAAYE,GAIZG,GAEAC,IACGC,IAAI,qCACJC,MAAK,SAACC,GACLX,EAASW,EAASC,KAAKA,KAAKb,OAC5Bc,QAAQC,IAAIf,MAEbgB,OAAM,SAACC,GACNH,QAAQC,IAAIE,MAET,eACN,IAGD,qBAAK9B,UAAWC,IAAM8B,cAAtB,SACGlB,EACGA,EACGmB,QAAO,SAACjC,GACP,OAAIA,EAAKQ,OACAR,KAIVkC,MAAMlB,EAAUA,EAAW,GAC3BmB,KAAI,SAACnC,GACJ,OAAO,cAAC,EAAD,CAAOA,KAAMA,OAExB,MC9BKoC,MAVf,WACE,OACE,qBAAKnC,UAAU,MAAf,SACE,wBAAQA,UAAU,aAAlB,SACE,cAAC,EAAD,SCGOoC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBd,MAAK,YAAkD,IAA/Ce,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.65f1cb71.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"HomeContainer\":\"Style_HomeContainer__16co_\",\"MemesConstainer\":\"Style_MemesConstainer__1Rxtf\"};","export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React, { useContext } from \"react\";\r\n\r\nimport style from \"./Style.module.css\";\r\n\r\nfunction Memes({ item }) {\r\n  return (\r\n    <div className={style.MemesConstainer}>\r\n      <span>{item.name}</span>\r\n      <img\r\n        src={item.url}\r\n        width=\"500px\"\r\n        height=\"500\"\r\n        alt=\"\"\r\n        style={{ cursor: \"pointer\", padding: \"10px\" }}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Memes;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport Memes from \"./Memes\";\r\nimport style from \"./Style.module.css\";\r\n\r\nfunction Home() {\r\n  const [memes, setMemes] = useState([]);\r\n  const [randomId, setRandomId] = useState(0);\r\n\r\n  const handleClick = () => {\r\n    const min = 2;\r\n    const max = 99;\r\n    const rand = min + Math.random() * (max - min);\r\n    setRandomId(rand);\r\n  };\r\n\r\n  useEffect(() => {\r\n    handleClick();\r\n\r\n    axios\r\n      .get(\"https://api.imgflip.com/get_memes\")\r\n      .then((response) => {\r\n        setMemes(response.data.data.memes);\r\n        console.log(memes);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n    return () => {};\r\n  }, []);\r\n\r\n  return (\r\n    <div className={style.HomeContainer}>\r\n      {memes\r\n        ? memes\r\n            .filter((item) => {\r\n              if (item.height <= 600) {\r\n                return item;\r\n              }\r\n              return item;\r\n            })\r\n            .slice(randomId, randomId + 1)\r\n            .map((item) => {\r\n              return <Memes item={item} />;\r\n            })\r\n        : \"\"}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n","import logo from \"./logo.svg\";\nimport \"./App.css\";\nimport Home from \"./component/Home\";\nimport { useState } from \"react\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <Home />\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}